version: '3.6'

services:
  etcd:
    image: 9d77v/etcd:v3.2.18 #quay.io/coreos/etcd:v3.2.18
    restart: always
    command: >
      /usr/local/bin/etcd 
      --data-dir=/etcd-data --name node1 
      --initial-advertise-peer-urls http://${NODE1}:2380 --listen-peer-urls http://${NODE1}:2380 
      --advertise-client-urls http://${NODE1}:2379 --listen-client-urls http://${NODE1}:2379 
      --initial-cluster node1=http://${NODE1}:2380
      --auto-compaction-retention=1
    ports:
      - 8500:2379
      - 8501:2380
    volumes:
      - etcd:/etcd-data
    container_name: ${DEVELOPER}-etcd
  mysql:
    image: mysql:5.7.23
    ports:
      - 8502:3306
    restart: always
    environment:
       MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
       MYSQL_DATABASE: ${MYSQL_DATABASE}
       MYSQL_USER: ${MYSQL_USER}
       MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql:/var/lib/mysql
    container_name: ${DEVELOPER}-mysql
  postgres:
    image: postgres:10.4-alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: postgres
      PGDATA: /tmp
    ports:
      - 8503:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    container_name: ${DEVELOPER}-postgres
  redis:
    image: redis:4.0.9-alpine
    restart: always
    ports:
      - 8504:6379
    volumes:
       - redis:/data
    container_name: ${DEVELOPER}-redis
  elasticsearch:
    image: 9d77v/elasticsearch:6.5.4
    restart: always
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - 8505:9200
      - 8506:9300
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata:/usr/share/elasticsearch/data
      - eslog:/usr/share/elasticsearch/logs
      - ./config:/usr/share/elasticsearch/plugins/ik/config
      - ./analysis:/usr/share/elasticsearch/config/analysis
    container_name: ${DEVELOPER}-elasticsearch
  logstash:
    image: 9d77v/logstash:6.4.3 
    # jars
    # postgres /opt/logstash/jars/postgresql-42.2.5.jar
    # mysql /opt/logstash/jars/mysql-connector-java-8.0.11.jar
    # restart: always
    volumes:
      - ./logstash/pipeline:/usr/share/logstash/pipeline
      - ./logstash/ruby:/usr/share/logstash/ruby
    container_name: ${DEVELOPER}-logstash
  filebeat:
    image: 9d77v/filebeat:6.4.3 #docker.elastic.co/beats/filebeat:6.4.3 
    restart: always
    user: root
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - /var/log/nginx:/var/log/nginx
    container_name: ${DEVELOPER}-filebeat
  kibana:
    image: 9d77v/kibana:6.4.2 #docker.elastic.co/kibana/kibana:6.4.2
    restart: always
    ports:
      - 8507:5601
    depends_on:
      - elasticsearch  
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
    container_name: ${DEVELOPER}-kibana
  jaeger:
    image: jaegertracing/all-in-one:1.6.0
    restart: always
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
      - 9411:9411/udp
      - 8508:6831/udp
      - 8509:6832/udp
      - 8510:16686
    container_name: ${DEVELOPER}-jaeger
  rabbitmq:
    image: rabbitmq:3.7.7-management-alpine
    restart: always
    ports:
      - 8511:5672
      - 8512:15672
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    container_name: ${DEVELOPER}-rabbitmq
  pgadmin4:
    image: dpage/pgadmin4:3.6 
    restart: always
    ports:
      - 8513:80
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres    
    container_name: ${DEVELOPER}-pgadmin4
  phpredisadmin:
    image: erikdubbelboer/phpredisadmin
    restart: always    
    ports:
      - 8514:80
    environment:
      REDIS_1_HOST: redis:6379
      REDIS_1_NAME: MyRedis
    depends_on:
      - redis  
    container_name: ${DEVELOPER}-phpredisadmin
  zookeeper:
    image: wurstmeister/zookeeper
    restart: always 
    ports:
      - 8515:2181
    container_name: ${DEVELOPER}-zookeeper
  kafka:
    image: wurstmeister/kafka:2.12-2.1.0
    restart: always 
    ports:
      - 8516:9092
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_${LOCALHOST}:8516
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:8516
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: ${LOCALHOST}:8515
    container_name: ${DEVELOPER}-kafka
  telegraf:
    image: telegraf:1.8.3-alpine
    logging:
      options:
        max-size: 5m
    restart: always
    depends_on:
      - influxdb  
    volumes:
      - ./telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: ${DEVELOPER}-telegraf  
  influxdb:
    image: influxdb:1.5.4-alpine
    logging:
      options:
        max-size: 5m
    restart: always
    volumes:
      - influxdb:/var/lib/influxdb
    container_name: ${DEVELOPER}-influxdb   
  grafana:
    image: grafana/grafana:5.3.4
    ports:
       - 8517:3000
    restart: always 
    depends_on:
      - influxdb  
    container_name: ${DEVELOPER}-grafana
  config-center-server:
    image: 9d77v/config-center:server
    restart: always
    environment:
        ETCD_SERVER: ${ETCD_SERVER}
        PROFILE : ${PROFILE}
    # ports:
    #   - 8202:7001
    volumes:
      - ./conf:/root/cmd/config_centerapi_svc/conf
    container_name: ${DEVELOPER}-CCServer
  config-center-client:
    image: 9d77v/config-center:client
    restart: always
    ports:
      - 8518:80
    depends_on:
      - config-center-server
    container_name: ${DEVELOPER}-CCClient
  tensorflow-notebook:
    image: jupyter/tensorflow-notebook:08e09e60eb05
    logging:
      options:
        max-size: 5m
    restart: always
    environment:
        JUPYTER_ENABLE_LAB: 'yes'
    ports:
      - 8519:8888
    volumes:
      - tensorflow-notebook:/home/jovyan/work
    container_name: ${DEVELOPER}-tensorflow-notebook 
  tensorflow:
    image: tensorflow/tensorflow:1.13.0rc0-py3-jupyter
    restart: always
    ports:
      - 8520:8888
    volumes:
      - tensorflow:/tf/notebooks
    container_name: ${DEVELOPER}-tensorflow 
  jumpserver:
    image: jumpserver/jms_all:latest
    restart: always
    ports:
      - 8521:80
      - 8522:2222
    depends_on:
      - mysql
      - redis 
    environment:
        BOOTSTRAP_TOKEN: ${JMS_BOOTSTRAP_TOKEN}
        DB_ENGINE: ${JMS_DB_ENGINE}
        DB_HOST: ${JMS_DB_HOST}
        DB_PORT: ${JMS_DB_PORT}
        DB_USER: ${JMS_DB_USER}
        DB_PASSWORD: ${JMS_DB_PASSWORD}
        DB_NAME: ${JMS_DB_NAME}
        REDIS_HOST: ${JMS_REDIS_HOST}
        REDIS_PORT: ${JMS_REDIS_PORT}
        REDIS_PASSWORD: ${JMS_REDIS_PASSWORD}
    volumes:
      - jumpserver:/opt/jumpserver/data
    container_name: ${DEVELOPER}-jumpserver 
  pyspark-notebook:
    image: jupyter/pyspark-notebook:41e066e5caa8
    logging:
      options:
        max-size: 5m
    restart: always
    environment:
        JUPYTER_ENABLE_LAB: 'yes'
    ports:
      - 8523:8888
    volumes:
      - ./pyspark-notebook:/home/jovyan/work
    container_name: ${DEVELOPER}-pyspark-notebook 
  nimbus:
    image: storm
    container_name: ${DEVELOPER}-nimbus
    command: storm nimbus
    depends_on:
      - zookeeper
    links:
      - zookeeper
    restart: always
    volumes:
      - stormlog:/logs
      - stormdata:/data
    ports:
      - 8524:6627
  supervisor:
    image: storm
    container_name: ${DEVELOPER}-supervisor
    command: storm supervisor
    depends_on:
      - nimbus
      - zookeeper
    links:
      - nimbus
      - zookeeper
    restart: always
  storm-ui:
    image: storm
    container_name: ${DEVELOPER}-storm-ui
    command: storm ui
    depends_on:
      - nimbus
    links:
      - nimbus
    ports:
      - 8525:8080
    restart: always  
  jobmanager:
    image: flink:1.7.2-hadoop28-scala_2.12-alpine
    expose:
      - "6123"
    ports:
      - "8526:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    container_name: ${DEVELOPER}-flink-jobmanager
  taskmanager:
    image: flink:1.7.2-hadoop28-scala_2.12-alpine
    expose:
      - "6121"
      - "6122"
    depends_on:
      - jobmanager
    command: taskmanager
    links:
      - "jobmanager:jobmanager"
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    container_name: ${DEVELOPER}-flink-taskmanager
  spark-master:
    image: bde2020/spark-master:2.4.0-hadoop2.7
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=false
    container_name: spark-master
volumes:
    etcd:
    mysql:
    postgres:
    redis:
    esdata:
    eslog:
    influxdb:
    tensorflow:
    tensorflow-notebook:
    jumpserver:
    stormlog:
    stormdata:
